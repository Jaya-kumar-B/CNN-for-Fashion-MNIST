!pip install mkl
import os
os.environ['MKL_THREADING_LAYER'] = 'GNU'
import tensorflow as tf
print(tf.config.threading.get_intra_op_parallelism_threads())


import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/content/fashion-mnist_test.csv'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
        
 import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPool2D, Input, Dropout, BatchNormalization
from tensorflow.keras.utils import to_categorical
from tensorflow import random
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.callbacks import EarlyStopping,ReduceLROnPlateau

#random.set_seed(44)
fashion = ['T-shirt/top',' Trouser','Pullover','Dress','Coat','Sandal','Shirt','Sneaker','Bag','Ankle Boot']
data = pd.read_csv('/content/fashion-mnist_test.csv')
data

y = data['label']
X = data.drop('label',axis=1)
X.shape,y.shape
X = X/255.
X = X.values.reshape(-1,28,28,1)
y = to_categorical(y,num_classes=10)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3)
X_train.shape,X_test.shape,y_train.shape,y_test.shape

inputs = Input(shape=(28,28,1))

x = Conv2D(8,(3,3),padding='same',activation='relu')(inputs)
x = MaxPool2D()(x)
x = Dropout(0.1)(x)

x = Conv2D(64,(3,3),activation='relu')(x)
x = MaxPool2D()(x)
x = Dropout(0.1)(x)

x = Flatten()(x)
x = Dense(128,activation='relu')(x)
x = Dense(10,activation='softmax')(x)

model = Model(inputs=inputs,outputs=x)

model.summary()
model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

history = model.fit(X_train,y = y_train, epochs=15, validation_data=(X_test,y_test))
test = pd.read_csv('/content/fashion-mnist_test.csv')
test.head()

ytest = test['label']
xtest = test.drop('label',axis=1)
xtest = xtest/255.
xtest = xtest.values.reshape(-1,28,28,1)
ypred = model.predict(xtest)
y_pred = []
for i in range(len(ypred)):
    y_pred.append(ypred[i].argmax())
    
    plt.imshow(xtest[563],cmap='gray')
plt.title('actual:{}  predicted:{}'.format(fashion[ytest[563]],fashion[y_pred[563]]))
print(accuracy_score(ytest,y_pred))
sns.heatmap(confusion_matrix(ytest,y_pred),annot=True,fmt='.0f',cmap='Blues',xticklabels=fashion,yticklabels=fashion)
